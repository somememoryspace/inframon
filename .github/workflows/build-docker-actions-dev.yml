name: OCI Build, Scan, and Push for Development

on:
  push:
    branches: [ "dev" ]

jobs:
  gitleaks-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Install Gitleaks
        run: |
          wget https://github.com/zricethezav/gitleaks/releases/download/v8.18.1/gitleaks_8.18.1_linux_x64.tar.gz
          tar -xzf gitleaks_8.18.1_linux_x64.tar.gz
          sudo mv gitleaks /usr/local/bin/

      - name: Run Gitleaks on all commits
        run: |
          gitleaks detect --source . --verbose --report-format json --report-path gitleaks-report.json
        continue-on-error: true

      - name: Check Gitleaks result
        run: |
          if [ -s gitleaks-report.json ]; then
            echo "Gitleaks has detected potential secrets in the repository history."
            echo "Please review the Gitleaks report and remove any sensitive information before proceeding."
            echo "Detected secrets:"
            cat gitleaks-report.json
            exit 1
          else
            echo "No secrets detected by Gitleaks."
          fi

      - name: Upload Gitleaks report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: gitleaks-report
          path: gitleaks-report.json

  build-scan-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set lowercase repository name
      run: |
        echo "GITHUB_REPOSITORY_LOWERCASE=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        echo "Repository name set to: ${{ env.GITHUB_REPOSITORY_LOWERCASE }}"

    - name: Install Trivy
      run: |
        sudo apt-get install wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy

    - name: Build Container Image
      run: |
        docker buildx build --platform linux/${{ matrix.arch }} \
          -t local/inframon:dev-${{ matrix.arch }} \
          --load .

    - name: Run Trivy vulnerability scanner
      run: |
        mkdir -p scan_results
        trivy image --exit-code 0 --severity HIGH,CRITICAL --format table \
          --output scan_results/trivy-results-${{ matrix.arch }}.txt \
          local/inframon:dev-${{ matrix.arch }}
        echo "Vulnerabilities found for ${{ matrix.arch }}:"
        cat scan_results/trivy-results-${{ matrix.arch }}.txt

    - name: Generate SBOM
      run: |
        mkdir -p sbom_reports
        trivy image --format json \
          --output sbom_reports/sbom-${{ matrix.arch }}.json \
          local/inframon:dev-${{ matrix.arch }}

    - name: Upload scan results
      uses: actions/upload-artifact@v4
      with:
        name: trivy-scan-results-${{ matrix.arch }}
        path: scan_results/trivy-results-${{ matrix.arch }}.txt

    - name: Upload SBOM
      uses: actions/upload-artifact@v4
      with:
        name: sbom-${{ matrix.arch }}
        path: sbom_reports/sbom-${{ matrix.arch }}.json

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GH_CR }}

    - name: Push Container Image
      run: |
        docker tag local/inframon:dev-${{ matrix.arch }} ghcr.io/${{ env.GITHUB_REPOSITORY_LOWERCASE }}/inframon:dev-${{ matrix.arch }}
        docker push ghcr.io/${{ env.GITHUB_REPOSITORY_LOWERCASE }}/inframon:dev-${{ matrix.arch }}

  create-multiarch-manifest:
    needs: build-scan-and-push
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
    - name: Set lowercase repository name
      run: |
        echo "GITHUB_REPOSITORY_LOWERCASE=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GH_CR }}

    - name: Create and push multi-arch manifest
      run: |
        docker manifest create ghcr.io/${{ env.GITHUB_REPOSITORY_LOWERCASE }}/inframon:dev \
          ghcr.io/${{ env.GITHUB_REPOSITORY_LOWERCASE }}/inframon:dev-amd64 \
          ghcr.io/${{ env.GITHUB_REPOSITORY_LOWERCASE }}/inframon:dev-arm64

        docker manifest push ghcr.io/${{ env.GITHUB_REPOSITORY_LOWERCASE }}/inframon:dev