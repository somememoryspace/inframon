name: OCI Build, Scan, Push, and Publish

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-scan-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set lowercase repository name
      run: |
        echo "GITHUB_REPOSITORY_LOWERCASE=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        echo "Repository name set to: ${{ env.GITHUB_REPOSITORY_LOWERCASE }}"

    - name: Install Trivy
      run: |
        sudo apt-get install wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy

    - name: Build Container Image
      run: |
        docker buildx build --platform linux/${{ matrix.arch }} \
          -t local/inframon:${{ matrix.arch }} \
          --load .

    - name: Run Trivy vulnerability scanner
      run: |
        mkdir -p scan_results
        if trivy image --exit-code 1 --severity HIGH,CRITICAL --format table \
          --output scan_results/trivy-results-${{ matrix.arch }}.txt \
          local/inframon:${{ matrix.arch }}; then
          echo "No HIGH or CRITICAL vulnerabilities found for ${{ matrix.arch }}"
        else
          echo "Vulnerabilities found for ${{ matrix.arch }}"
          cat scan_results/trivy-results-${{ matrix.arch }}.txt
          exit 1
        fi

    - name: Generate SBOM
      run: |
        mkdir -p sbom_reports
        trivy image --format json \
          --output sbom_reports/sbom-${{ matrix.arch }}.json \
          local/inframon:${{ matrix.arch }}

    - name: Upload scan results
      uses: actions/upload-artifact@v4
      with:
        name: trivy-scan-results-${{ matrix.arch }}
        path: scan_results/trivy-results-${{ matrix.arch }}.txt

    - name: Upload SBOM
      uses: actions/upload-artifact@v4
      with:
        name: sbom-${{ matrix.arch }}
        path: sbom_reports/sbom-${{ matrix.arch }}.json

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GH_CR }}

    - name: Push Container Image
      run: |
        docker tag local/inframon:${{ matrix.arch }} ghcr.io/${{ env.GITHUB_REPOSITORY_LOWERCASE }}/inframon:${{ matrix.arch }}
        docker push ghcr.io/${{ env.GITHUB_REPOSITORY_LOWERCASE }}/inframon:${{ matrix.arch }}

  create-multiarch-manifest:
    needs: build-scan-and-push
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
    - name: Set lowercase repository name
      run: |
        echo "GITHUB_REPOSITORY_LOWERCASE=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GH_CR }}

    - name: Create and push multi-arch manifest
      run: |
        docker manifest create ghcr.io/${{ env.GITHUB_REPOSITORY_LOWERCASE }}/inframon:latest \
          ghcr.io/${{ env.GITHUB_REPOSITORY_LOWERCASE }}/inframon:amd64 \
          ghcr.io/${{ env.GITHUB_REPOSITORY_LOWERCASE }}/inframon:arm64

        docker manifest push ghcr.io/${{ env.GITHUB_REPOSITORY_LOWERCASE }}/inframon:latest