name: Build, Push Container Image, and Publish SBOM Report

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build the Container Image
      working-directory: scripts
      run: ./builddocker.sh

    - name: Setup Grype
      run: |
        curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
        # Check for installation errors
        if [ $? -ne 0 ]; then exit 1; fi

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Push Container Image
      uses: docker/build-push-action@v6
      with:
        push: true
        platforms: linux/amd64,linux/arm64
        tags: ghcr.io/${{ github.repository }}/inframon:latest

    - name: Generate SBOM Report
      run: |
        mkdir -p sbom_reports
        # Ensure the image name matches your built image
        grype sbom ghcr.io/${{ github.repository }}/inframon:latest --output cyclonedx > sbom_reports/sbom.xml
        # Check if SBOM generation failed
        if [ $? -ne 0 ]; then exit 1; fi

    - name: Publish SBOM Report and Image Information to GitHub
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const path = 'sbom_reports/sbom.xml';
          const file = fs.readFileSync(path, { encoding: 'base64' });

          // Create or update a release
          const release = await github.rest.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: 'latest-release',
            name: 'Latest Release',
            body: `This release includes the latest build of the Docker image: ghcr.io/${{ github.repository }}/inframon:latest\n\n` +
                  'SBOM Report: [Download SBOM](https://github.com/${{ github.repository }}/releases/download/latest-release/sbom.xml)',
            draft: false,
            prerelease: false
          });

          // Upload SBOM as an asset
          await github.rest.repos.uploadReleaseAsset({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: release.data.id,
            name: 'sbom.xml',
            data: file,
            headers: {
              'content-type': 'application/octet-stream',
              'content-length': file.length
            }
          });
