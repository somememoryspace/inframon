name: Build, Scan, Push Container Image, and Publish SBOM Report

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GH_CR }}

    - name: Build and Push Container Image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        platforms: ${{ matrix.platform }}
        tags: ghcr.io/${{ github.repository }}/inframon:latest
        labels: |
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          org.opencontainers.image.description=Image for ${{ github.repository }}
          org.opencontainers.image.licenses=MIT

    - name: Install Trivy
      run: |
        sudo apt-get install wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy

    - name: Run Trivy Vulnerability Scanner
      run: |
        trivy image --format table --exit-code 1 --ignore-unfixed --vuln-type os,library --severity CRITICAL,HIGH ghcr.io/${{ github.repository }}/inframon:latest

    - name: Generate SBOM
      if: success()
      run: |
        trivy image --format json --output sbom-report-${{ matrix.platform }}.json ghcr.io/${{ github.repository }}/inframon:latest

    - name: Publish SBOM
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: sbom-report-${{ matrix.platform }}
        path: sbom-report-${{ matrix.platform }}.json

  create-manifest:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create and Push Manifest
      run: |
        docker manifest create ghcr.io/${{ github.repository }}/inframon:latest \
          --amend ghcr.io/${{ github.repository }}/inframon:latest-linux-amd64 \
          --amend ghcr.io/${{ github.repository }}/inframon:latest-linux-arm64
        docker manifest push ghcr.io/${{ github.repository }}/inframon:latest
